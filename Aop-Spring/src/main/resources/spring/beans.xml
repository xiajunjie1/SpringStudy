<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
    <!--启用上下文注解 -->
    <context:annotation-config />
    <!--配置扫描包 -->
    <context:component-scan base-package="com.maker.aop" />

    <!--
        <bean id="serviceAdvice" class="com.maker.aop.advice.ServiceAdvice" />
        -->
    <!-- AOP配置 -->
    <!--
    <aop:config >
    -->
    <!--切入点，匹配所有service包下MessageServiceImpl中所有的公有方法
        args(msg)：给通知方法传入切点业务方法的参数
    -->
    <!--
        <aop:pointcut id="messagePointcut" expression="execution(public * com.maker..service..MessageServiceImpl.*(..)) and args(msg)"/>
        -->
    <!-- 指定切面类 -->
    <!--
        <aop:aspect ref="serviceAdvice" >
        -->
    <!-- 前置通知 -->
    <!--  <aop:before method="beforeHandle" pointcut-ref="messagePointcut"/> -->
    <!-- 后置通知 -->
    <!--     <aop:after method="afterHandle" pointcut-ref="messagePointcut" /> -->

    <!--环绕通知配置 -->
    <!--
            <aop:around method="roundHandle" pointcut="execution(public * com.maker..service..*.*(..))" />

        </aop:aspect>

    </aop:config>
    -->


    <!-- 开启Aop的注解
        基于JDK的动态代理
    -->
    <aop:aspectj-autoproxy proxy-target-class="false" />


</beans>